/* 
 * File: FacePamphlet.java
 * -----------------------
 * When it is finished, this program will implement a basic social network
 * management system.
 */

import acm.program.*;
import acm.graphics.*;
import acm.util.*;
import java.awt.event.*;
import java.util.Iterator;

import javax.swing.*;

public class FacePamphlet extends Program 
					implements FacePamphletConstants {

	/**
	 * This method has the responsibility for initializing the 
	 * interactors in the application, and taking care of any other 
	 * initialization that needs to be performed.
	 */
	public void init() {
		db = new FacePamphletDatabase(); 
		createDisplay();
    }    
	
	private void createDisplay() {
		canvas = new FacePamphletCanvas();		
		add(canvas,CENTER);		
		addTopBar();
		addSideBar();
		
		addActionListeners();
	}
	
	private void addTopBar() {
		nameLabel = new JLabel("Name");
		nameField = new JTextField(TEXT_FIELD_SIZE);
		nameAdd = new JButton("Add");
		nameDelete = new JButton("Delete");
		nameLookup = new JButton("Lookup");
		
		add(nameLabel,NORTH);
		add(nameField,NORTH);
		add(nameAdd,NORTH);
		add(nameDelete,NORTH);
		add(nameLookup,NORTH);
	}

	private void addSideBar() {
		statusField = new JTextField(TEXT_FIELD_SIZE);
		statusChange = new JButton("Change Status");
		pictureField = new JTextField(TEXT_FIELD_SIZE);
		pictureChange = new JButton("Change Picture");
		friendField = new JTextField(TEXT_FIELD_SIZE);
		addFriend = new JButton("Add Friend");
		
		add(statusField,WEST);
		add(statusChange,WEST);
		addEmptyLabel(WEST);
		
		add(pictureField,WEST);
		add(pictureChange,WEST);
		addEmptyLabel(WEST);
		
		add(friendField,WEST);		
		add(addFriend,WEST);
		
		statusChange.addActionListener(this);
		pictureChange.addActionListener(this);
		addFriend.addActionListener(this);
	}
	
	private void addEmptyLabel(String location) {
		JLabel emptyLabel = new JLabel(EMPTY_LABEL_TEXT);
		add(emptyLabel, location);
	}
	
    /**
     * This class is responsible for detecting when the buttons are
     * clicked or interactors are used, so you will have to add code
     * to respond to these actions.
     */
    public void actionPerformed(ActionEvent e) {
    	String name = "";
    	Object source = e.getSource();
    	if (source == nameAdd || source == nameLookup || source == nameDelete) {
    		name = nameField.getText();
    		if (source == nameAdd) {
    			createProfile(name);			
    		} else if (source == nameDelete) {			
    			deleteProfile(name);
    		} else if (source == nameLookup) {
    			if (validProfile(name)) {
    				currentProfile = db.getProfile(name);		
    			}			
    		}
    	} else if (source == statusChange || source == statusField) {
			System.out.println("statusField action");
			String text = statusField.getText();
			if ( currentProfile != null && !text.equals("") ) {				
				changeStatus(text);				
			}			
		} else if (source == addFriend || source == friendField) {
			System.out.println("friendField action");
			String text = friendField.getText();
			if ( currentProfile != null && hasFriend(text) == false) {				
				addFriend(text);				
			}			
		}
    	
		updateDisplay();
//				if (e.getSource() == pictureChange)
//					if (e.getSource() == addFriend);
	}
    
    private void addFriend(String name) {
    	if (db.containsProfile(name) && hasFriend(name) == false) {
    		currentProfile.addFriend(name);
    	}
    }
    
    private boolean hasFriend(String name) {
    	Iterator<String> iter = currentProfile.getFriends();
		while (iter.hasNext()) {
			if (iter.next() == name) return true;
		}
		return false;    	
    }
    
    private void changeStatus(String status) {
    	String name = currentProfile.getName();
    	String msg = name + " is " + status;
    	currentProfile.setStatus(msg);
    }
    
    private void updateDisplay() {
    	canvas.removeAll();
    	if (currentProfile != null) {
    		canvas.displayProfile(currentProfile);
    	} 
    }
    
    private boolean validProfile (String name) {
    	return db.containsProfile(name);
    }
    
    private void deleteProfile (String name) {
		db.deleteProfile(name);
    	currentProfile = null;    	
    }
    
    private void createProfile(String name) {
    	FacePamphletProfile newProfile = new FacePamphletProfile(name);
		db.addProfile(newProfile);
		currentProfile = newProfile;
    }
    
    private FacePamphletDatabase db; 
    private FacePamphletProfile currentProfile;
    private FacePamphletCanvas canvas;
    private JLabel nameLabel;
	private JTextField nameField;
	private JTextField statusField;
	private JTextField pictureField;
	private JTextField friendField;
	private JButton nameAdd;
	private JButton nameDelete;
	private JButton nameLookup;
	private JButton statusChange;
	private JButton pictureChange;
	private JButton addFriend;

}
