/** 
 * This class provides methods for working with an array that expands 
 * to include any positive index value supplied by the caller. 
 */ 
 
public class ExpandableArray { 
 
/** 
 * Creates a new expandable array with no elements. 
 */ 
  public ExpandableArray() { 
    arr = new Object[0];    
    arrLength = 0;
  }  
 
/** 
 * Sets the element at the given index position to the specified. 
 * value. If the internal array is not large enough to contain that 
 * element, the implementation expands the array to make room. 
 */ 
  public void set(int index, Object value) {
    if (value instanceof String) {
    	arr = new String[index];
    } else if (value instanceof Integer) {
    	arr = new int[index];
    }
  } 
  
  public int length() {
	  return arrLength;
  }
 
 
/** 
 * Returns the element at the specified index position, or null if 
 * no such element exists.  Note that this method never throws an 
 * out-of-bounds exception; if the index is outside the bounds of 
 * the array, the return value is simply null. 
 */ 
  public Object get(int index) { 
    . . . You fill in the implementation . . . 
  } 
 
  private Object arr;
  private int arrLength;
} 